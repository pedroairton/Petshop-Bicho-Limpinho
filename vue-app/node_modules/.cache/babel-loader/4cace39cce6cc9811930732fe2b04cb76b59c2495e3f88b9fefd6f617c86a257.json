{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"page-login\"\n};\nconst _hoisted_2 = {\n  class: \"login-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"titulo\"\n}, \"Fazer Login\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"btn-login\"\n}, \"LOGIN\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"\",\n  class: \"redefinir-senha\"\n}, \"Esqueceu sua senha ?\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <nav>\\r\\n        <div class=\\\"nav-buttons\\\">\\r\\n\\r\\n            <router-link to=\\\"/\\\">\\r\\n                <img class=\\\"logo\\\" src=\\\"../assets/images/logoPetshop.png\\\" alt=\\\"\\\">\\r\\n            </router-link>\\r\\n\\r\\n        </div>\\r\\n    </nav> \"), _createElementVNode(\"section\", _hoisted_1, [_createElementVNode(\"form\", _hoisted_2, [_createCommentVNode(\" <img src=\\\"../assets/images/logoPetshop.png\\\" alt=\\\"\\\" class=\\\"logo\\\"> \"), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input\",\n    placeholder: \"E-MAIL\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input\",\n    placeholder: \"SENHA\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.senha = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.senha]]), _hoisted_4, _createVNode(_component_router_link, {\n    to: \"/cadastro\",\n    class: \"cadastro-login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Cadastrar-se \")]),\n    _: 1 /* STABLE */\n  }), _hoisted_5])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","href","_createElementBlock","_Fragment","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","type","placeholder","_cache","$event","$data","email","senha","_hoisted_4","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_hoisted_5"],"sources":["C:\\Users\\pedro\\Documents\\GitHub\\vue\\vue-app\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n    <!-- <nav>\r\n        <div class=\"nav-buttons\">\r\n\r\n            <router-link to=\"/\">\r\n                <img class=\"logo\" src=\"../assets/images/logoPetshop.png\" alt=\"\">\r\n            </router-link>\r\n\r\n        </div>\r\n    </nav> -->\r\n    <section class=\"page-login\">\r\n        <form class=\"login-container\">\r\n            <!-- <img src=\"../assets/images/logoPetshop.png\" alt=\"\" class=\"logo\"> -->\r\n            <h1 class=\"titulo\">Fazer Login</h1>\r\n            <input type=\"text\" class=\"input\" placeholder=\"E-MAIL\" v-model=\"email\">\r\n            <input type=\"text\" class=\"input\" placeholder=\"SENHA\" v-model=\"senha\">\r\n            <button class=\"btn-login\">LOGIN</button>\r\n            <router-link to=\"/cadastro\" class=\"cadastro-login\">\r\n                Cadastrar-se\r\n            </router-link>\r\n            <a href=\"\" class=\"redefinir-senha\">Esqueceu sua senha ?</a>\r\n        </form>\r\n    </section>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        name: 'LoginPage',\r\n        data() {\r\n            return {\r\n                email: '',\r\n                senha: '',\r\n            }\r\n        },\r\n        methods: {\r\n            async loginUser() {\r\n                try {              \r\n                    const response = await fetch('url', {\r\n                \r\n                        method: 'POST',\r\n                    \r\n                        headers: {\r\n                    \r\n                           'Content-Type': 'application/json'\r\n                    \r\n                        },\r\n                    \r\n                        body: JSON.stringify(data)({\r\n                           email: this.email,\r\n                           senha: this.senha\r\n                        })\r\n                    \r\n                    });\r\n                    \r\n                    const data = await response.json();\r\n                    \r\n                    console.log(data);\r\n                } \r\n                catch (error) {\r\n                    console.error('Erro:', error)\r\n                    this.message = 'Erro ao fazer login'\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"],"mappings":";;EAUaA,KAAK,EAAC;AAAY;;EACjBA,KAAK,EAAC;AAAiB;gCAEzBC,mBAAA,CAAmC;EAA/BD,KAAK,EAAC;AAAQ,GAAC,aAAW;gCAG9BC,mBAAA,CAAwC;EAAhCD,KAAK,EAAC;AAAW,GAAC,OAAK;gCAI/BC,mBAAA,CAA2D;EAAxDC,IAAI,EAAC,EAAE;EAACF,KAAK,EAAC;GAAkB,sBAAoB;;;uBApBnEG,mBAAA,CAAAC,SAAA,SACIC,mBAAA,wPAQU,EACVJ,mBAAA,CAYU,WAZVK,UAYU,GAXNL,mBAAA,CAUO,QAVPM,UAUO,GATHF,mBAAA,4EAAyE,EACzEG,UAAmC,E,gBACnCP,mBAAA,CAAsE;IAA/DQ,IAAI,EAAC,MAAM;IAACT,KAAK,EAAC,OAAO;IAACU,WAAW,EAAC,QAAQ;IAdjE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAc2EC,KAAA,CAAAC,KAAK,GAAAF,MAAA;iDAALC,KAAA,CAAAC,KAAK,E,mBACpEb,mBAAA,CAAqE;IAA9DQ,IAAI,EAAC,MAAM;IAACT,KAAK,EAAC,OAAO;IAACU,WAAW,EAAC,OAAO;IAfhE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAe0EC,KAAA,CAAAE,KAAK,GAAAH,MAAA;iDAALC,KAAA,CAAAE,KAAK,E,GACnEC,UAAwC,EACxCC,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC,WAAW;IAACnB,KAAK,EAAC;;IAjB9CoB,OAAA,EAAAC,QAAA,CAiB+D,MAEnD,CAnBZC,gBAAA,CAiB+D,gBAEnD,E;IAnBZC,CAAA;MAoBYC,UAA2D,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}