{"ast":null,"code":"const swiperEl = document.querySelector('swiper-container');\n\n// swiper parameters\nconst swiperParams = {\n  slidesPerView: 1,\n  breakpoints: {\n    640: {\n      slidesPerView: 2\n    },\n    1024: {\n      slidesPerView: 3\n    }\n  },\n  on: {\n    init() {\n      // ...\n    }\n  }\n};\n\n// now we need to assign all parameters to Swiper element\nObject.assign(swiperEl, swiperParams);\n\n// and now initialize it\nswiperEl.initialize();\nimport NavBar from './NavBar.vue';\nexport default {\n  name: 'HomePage',\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      inputNome: '',\n      contador: 0\n    };\n  },\n  methods: {\n    submitForm(event) {\n      event.preventDefault();\n      console.log(this.inputNome);\n    },\n    increment(event) {\n      event.preventDefault();\n      this.contador++;\n    }\n  }\n};\n// var swiper = new Swiper(\".mySwiper\", {\n//   pagination: {\n//     el: \".swiper-pagination\",\n//     clickable: true,\n//     renderBullet: function (index, className) {\n//       return '<span class=\"' + className + '\">' + (index + 1) + \"</span>\";\n//     },\n//   },\n// });\n// console.log(swiper)","map":{"version":3,"names":["swiperEl","document","querySelector","swiperParams","slidesPerView","breakpoints","on","init","Object","assign","initialize","NavBar","name","components","data","inputNome","contador","methods","submitForm","event","preventDefault","console","log","increment"],"sources":["C:\\Users\\pedro\\Documents\\GitHub\\vue\\vue-app\\src\\components\\HomePage.vue"],"sourcesContent":["<template>\r\n    <NavBar />\r\n    <section>\r\n        <!-- SWIPER CARROSSEL -->\r\n        <swiper-container slides-per-view=\"3\" speed=\"500\" loop=\"true\" css-mode=\"true\">\r\n            <swiper-slide><img src=\"../assets/banner.png\" alt=\"\"></swiper-slide>\r\n            <swiper-slide>Slide 2</swiper-slide>\r\n            <swiper-slide>Slide 3</swiper-slide>\r\n        </swiper-container>\r\n         \r\n        <!-- Alguns testes -->\r\n        <span>Teste</span>\r\n        <form>\r\n            <input type=\"text\" v-model=\"inputNome\" placeholder=\"Nome\">\r\n            <input type=\"submit\" value=\"Enviar\" v-on:click=\"submitForm\">\r\n            <button @click=\"increment\">Total de cliques: {{ contador }}</button>\r\n        </form>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\n    const swiperEl = document.querySelector('swiper-container');\r\n\r\n    // swiper parameters\r\n    const swiperParams = {\r\n    slidesPerView: 1,\r\n    breakpoints: {\r\n        640: {\r\n        slidesPerView: 2,\r\n        },\r\n        1024: {\r\n        slidesPerView: 3,\r\n        },\r\n    },\r\n    on: {\r\n        init() {\r\n        // ...\r\n        },\r\n    },\r\n    };\r\n\r\n    // now we need to assign all parameters to Swiper element\r\n    Object.assign(swiperEl, swiperParams);\r\n\r\n    // and now initialize it\r\n    swiperEl.initialize();\r\n\r\n    import NavBar from './NavBar.vue'\r\n\r\n    export default {\r\n        name: 'HomePage',\r\n        components: {\r\n            NavBar,\r\n        },\r\n        data(){\r\n            return{\r\n            inputNome: '',\r\n            contador: 0,\r\n            }\r\n        },\r\n        methods: {\r\n            submitForm(event){\r\n            event.preventDefault();\r\n            console.log(this.inputNome)\r\n            },\r\n            increment(event){\r\n            event.preventDefault()\r\n            this.contador++\r\n            }\r\n        }\r\n    }\r\n    // var swiper = new Swiper(\".mySwiper\", {\r\n    //   pagination: {\r\n    //     el: \".swiper-pagination\",\r\n    //     clickable: true,\r\n    //     renderBullet: function (index, className) {\r\n    //       return '<span class=\"' + className + '\">' + (index + 1) + \"</span>\";\r\n    //     },\r\n    //   },\r\n    // });\r\n    // console.log(swiper)\r\n</script>"],"mappings":"AAqBI,MAAMA,QAAO,GAAIC,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;;AAE3D;AACA,MAAMC,YAAW,GAAI;EACrBC,aAAa,EAAE,CAAC;EAChBC,WAAW,EAAE;IACT,GAAG,EAAE;MACLD,aAAa,EAAE;IACf,CAAC;IACD,IAAI,EAAE;MACNA,aAAa,EAAE;IACf;EACJ,CAAC;EACDE,EAAE,EAAE;IACAC,IAAIA,CAAA,EAAG;MACP;IAAA;EAEJ;AACA,CAAC;;AAED;AACAC,MAAM,CAACC,MAAM,CAACT,QAAQ,EAAEG,YAAY,CAAC;;AAErC;AACAH,QAAQ,CAACU,UAAU,CAAC,CAAC;AAErB,OAAOC,MAAK,MAAO,cAAa;AAEhC,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACRF;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAE;IACF,OAAM;MACNC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE;IACV;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAACC,KAAK,EAAC;MACjBA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACP,SAAS;IAC1B,CAAC;IACDQ,SAASA,CAACJ,KAAK,EAAC;MAChBA,KAAK,CAACC,cAAc,CAAC;MACrB,IAAI,CAACJ,QAAQ,EAAC;IACd;EACJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}